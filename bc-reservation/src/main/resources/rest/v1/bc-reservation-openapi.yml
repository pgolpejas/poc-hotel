openapi: 3.0.3
info:
  title: bc-reservation
  description: This API exposes endpoints to hotel reservation
  contact:
    name: Hotel reservation API
    email: bc-reservation@poc-hotel.com
  version: 0.0.1
servers:
  - url: http://localhost:9081
    description: LOCAL
tags:
  - name: reservation
    description: Hotel Reservation API
  - name: reservationInformational
    description: Hotel Reservation Informational API
  - name: roomTypeInventory
    description: Hotel RoomTypeInventory API
paths:
  /v1/informational/hotel-reservation/search:
    post:
      tags:
        - reservationInformational
      summary: Search by filters
      description: Search by filters
      operationId: searchInformationalReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregatedReservationCriteriaDto'
        required: true
      responses:
        '200':
          description: Found results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatedReservationPaginationResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /v1/hotel-reservation:
    put:
      tags:
        - reservation
      summary: Update item
      description: Update item
      operationId: updateReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationDto'
        required: true
      responses:
        '200':
          description: Updated item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDto'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      tags:
        - reservation
      summary: Create item
      description: Create item
      operationId: createReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationDto'
        required: true
      responses:
        '201':
          description: Created item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDto'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409Conflict'
  /v1/hotel-reservation/search:
    post:
      tags:
        - reservation
      summary: Search by filters
      description: Search by filters
      operationId: searchReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriteriaRequestDto'
        required: true
      responses:
        '200':
          description: Found results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationPaginationResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /v1/hotel-reservation/search-audit/{limit}:
    post:
      tags:
        - reservation
      summary: Search audit by filters
      description: Search audit by filters
      operationId: searchAuditReservation
      parameters:
        - name: limit
          in: path
          description: number of items to return
          required: true
          schema:
            type: integer
            format: int32
          example: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditFiltersRequestDto'
        required: true
      responses:
        '200':
          description: Found audit results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationListResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /v1/hotel-reservation/{id}:
    get:
      tags:
        - reservation
      summary: Search item by id
      description: Search item by id
      operationId: getReservation
      parameters:
        - name: id
          in: path
          description: item id
          required: true
          schema:
            type: string
            format: uuid
          example: d1a97f69-7fa0-4301-b498-128d78860828
      responses:
        '200':
          description: Found item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDto'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
    delete:
      tags:
        - reservation
      summary: Delete item
      description: Delete item
      operationId: deleteReservation
      parameters:
        - name: id
          in: path
          description: item id
          required: true
          schema:
            type: string
            format: uuid
          example: d1a97f69-7fa0-4301-b498-128d78860828
      responses:
        '200':
          description: Deleted item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDto'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /v1/hotel-room-type-inventory:
    put:
      tags:
        - roomTypeInventory
      summary: Update item
      description: Update item
      operationId: updateRoomTypeInventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomTypeInventoryDto'
        required: true
      responses:
        '200':
          description: Updated item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomTypeInventoryDto'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      tags:
        - roomTypeInventory
      summary: Create item
      description: Create item
      operationId: createRoomTypeInventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomTypeInventoryDto'
        required: true
      responses:
        '201':
          description: Created item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomTypeInventoryDto'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409Conflict'
  /v1/hotel-room-type-inventory/search:
    post:
      tags:
        - roomTypeInventory
      summary: Search by filters
      description: Search by filters
      operationId: searchRoomTypeInventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriteriaRequestDto'
        required: true
      responses:
        '200':
          description: Found results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomTypeInventoryPaginationResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /v1/hotel-room-type-inventory/search-audit/{limit}:
    post:
      tags:
        - roomTypeInventory
      summary: Search audit by filters
      description: Search audit by filters
      operationId: searchAuditRoomTypeInventory
      parameters:
        - name: limit
          in: path
          description: number of items to return
          required: true
          schema:
            type: integer
            format: int32
          example: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditFiltersRequestDto'
        required: true
      responses:
        '200':
          description: Found audit results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomTypeInventoryListResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /v1/hotel-room-type-inventory/{id}:
    get:
      tags:
        - roomTypeInventory
      summary: Search item by id
      description: Search item by id
      operationId: getRoomTypeInventory
      parameters:
        - name: id
          in: path
          description: item id
          required: true
          schema:
            type: string
            format: uuid
          example: d1a97f69-7fa0-4301-b498-128d78860828
      responses:
        '200':
          description: Found item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomTypeInventoryDto'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
    delete:
      tags:
        - roomTypeInventory
      summary: Delete item
      description: Delete item
      operationId: deleteRoomTypeInventory
      parameters:
        - name: id
          in: path
          description: item id
          required: true
          schema:
            type: string
            format: uuid
          example: d1a97f69-7fa0-4301-b498-128d78860828
      responses:
        '200':
          description: Deleted item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomTypeInventoryDto'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
components:
  schemas:
    AggregatedReservationCriteriaDto:
      type: object
      properties:
        from:
          type: string
          format: date
          description: Start date of the reservation period
        to:
          type: string
          format: date
          description: End date of the reservation period
        guestIds:
          type: array
          items:
            $ref: '#/components/schemas/GuestId'
          description: Set of guest IDs
          uniqueItems: true
          maxItems: 100
        hotelIds:
          type: array
          items:
            $ref: '#/components/schemas/HotelId'
          description: Set of hotel IDs
          uniqueItems: true
          maxItems: 100
        roomTypeIds:
          type: array
          items:
            $ref: '#/components/schemas/RoomTypeId'
          description: Set of room type IDs
          uniqueItems: true
          maxItems: 100
        hotelCountries:
          type: array
          items:
            type: string
          uniqueItems: true
          description: Set of hotel countries
          maxItems: 100
        page:
          type: integer
          description: Page number for pagination
        limit:
          type: integer
          description: Number of items per page for pagination
        sortDirection:
          type: string
          description: Sort direction
        sortBy:
          type: string
          description: Field to sort by
        database:
          type: string
          description: MONGO/POSTGRES
          enum:
            - MONGO
            - POSTGRES
          default: 'POSTGRES'
          example: 'POSTGRES'
      required:
        - from
        - to
        - page
        - limit
        - sortDirection
        - sortBy
      example:
        from: 2024-07-01
        to: 2024-12-31
        guestIds:
          - f1a97f69-7fa0-4301-b498-128d78860828
        hotelIds:
          - e1a97f69-7fa0-4301-b498-128d78860828
        roomTypeIds:
          - d1a97f69-7fa0-4301-b498-128d78860828
        hotelCountries:
          - ES
        page: 0
        limit: 20
        sortDirection: ASC
        sortBy: id
    AggregatedReservationDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ReservationId'
        roomTypeId:
          $ref: '#/components/schemas/RoomTypeId'
        hotel:
          $ref: '#/components/schemas/AggregatedHotelDto'
        guestId:
          $ref: '#/components/schemas/GuestId'
        start:
          type: string
          format: date
          description: Reservation start date
        end:
          type: string
          format: date
          description: Reservation end date
        status:
          $ref: '#/components/schemas/ReservationStatus'
      example:
        id: a1a97f69-7fa0-4301-b498-128d78860828
        roomTypeId: 1
        hotel:
          id: e1a97f69-7fa0-4301-b498-128d78860828
          version: 0
          name: "Hotel 1"
          address: "Calle 1"
          city: "Madrid"
          state: "Madrid"
          country: "ES"
          postalCode: "28001"
          rooms:
            - id: 1
              version: 0
              roomTypeId: 1
              name: "Room 1"
              floor: 1
              roomNumber: "101"
              available: true
        guestId: f1a97f69-7fa0-4301-b498-128d78860828
        start: 2024-01-11
        end: 2024-11-30
        status: ON
    AggregatedHotelDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/HotelId'
        version:
          $ref: '#/components/schemas/Version'
        name:
          type: string
          description: Hotel name
          maxLength: 100
        address:
          type: string
          description: Hotel address
          maxLength: 200
        city:
          type: string
          description: Hotel city
          maxLength: 100
        state:
          type: string
          description: Hotel state
          maxLength: 100
        country:
          type: string
          description: Hotel country
          maxLength: 100
        postalCode:
          type: string
          description: Hotel postal code
          maxLength: 10
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/AggregatedRoomDto'
      example:
        id: e1a97f69-7fa0-4301-b498-128d78860828
        version: 0
        name: "Hotel 1"
        address: "Calle 1"
        city: "Madrid"
        state: "Madrid"
        country: "ES"
        postalCode: "28001"
        rooms:
          - id: 1
            version: 0
            roomTypeId: 1
            name: "Room 1"
            floor: 1
            roomNumber: "101"
            available: true
    AggregatedRoomDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RoomId'
        version:
          $ref: '#/components/schemas/Version'
        roomTypeId:
          $ref: '#/components/schemas/RoomTypeId'
        name:
          type: string
          description: Room name
          maxLength: 100
        floor:
          type: integer
          format: int32
          description: Room floor
        roomNumber:
          type: string
          description: Room number
          maxLength: 5
        available:
          type: boolean
          description: Room availability
      example:
        id: 1
        version: 0
        roomTypeId: 1
        name: "Room 1"
        floor: 1
        roomNumber: "101"
        available: true
    ReservationDto:
      required:
        - end
        - guestId
        - hotelId
        - id
        - roomTypeId
        - start
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ReservationId'
        version:
          $ref: '#/components/schemas/Version'
        roomTypeId:
          $ref: '#/components/schemas/RoomTypeId'
        hotelId:
          $ref: '#/components/schemas/HotelId'
        guestId:
          $ref: '#/components/schemas/GuestId'
        start:
          description: reservation start date in format yyyy-MM-dd
          type: string
          format: date
          example: 2024-01-11
        end:
          description: reservation end date in format yyyy-MM-dd
          type: string
          format: date
          example: 2024-11-30
        status:
          $ref: '#/components/schemas/ReservationStatus'
    ReservationPaginationResponse:
      type: object
      additionalProperties: false
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          description: items
          items:
            $ref: '#/components/schemas/ReservationDto'
      example:
        pagination:
          limit: 20
          page: 0
          total: 100
        data:
          - id: a1a97f69-7fa0-4301-b498-128d78860828
            roomTypeId: 1
            hotelId: e1a97f69-7fa0-4301-b498-128d78860828
            guestId: f1a97f69-7fa0-4301-b498-128d78860828
            start: 2024-01-11
            end: 2024-11-30
            status: ON
    AggregatedReservationPaginationResponse:
      type: object
      additionalProperties: false
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          description: items
          items:
            $ref: '#/components/schemas/AggregatedReservationDto'
      example:
        pagination:
          limit: 20
          page: 0
          total: 100
        data:
          - id: a1a97f69-7fa0-4301-b498-128d78860828
            roomTypeId: 1
            hotel:
              id: e1a97f69-7fa0-4301-b498-128d78860828
              version: 0
              name: "Hotel 1"
              address: "Calle 1"
              city: "Madrid"
              state: "Madrid"
              country: "ES"
              postalCode: "28001"
              rooms:
                - id: 1
                  version: 0
                  roomTypeId: 1
                  name: "Room 1"
                  floor: 1
                  roomNumber: "101"
                  available: true
            guestId: f1a97f69-7fa0-4301-b498-128d78860828
            start: 2024-01-11
            end: 2024-11-30
            status: ON
    ReservationListResponse:
      type: object
      properties:
        data:
          type: array
          description: items
          items:
            $ref: '#/components/schemas/ReservationDto'
    ReservationId:
      description: Reservation identifier
      type: string
      format: uuid
      example: 'a1a97f69-7fa0-4301-b498-128d78860828'
    RoomId:
      description: Room identifier
      type: string
      format: uuid
      example: 'b1a97f69-7fa0-4301-b498-128d78860828'
    RoomTypeId:
      description: RoomType identifier
      type: integer
      format: int32
      example: 1
    HotelId:
      description: hotel identifier
      type: string
      format: uuid
      example: 'e1a97f69-7fa0-4301-b498-128d78860828'
    GuestId:
      description: guest identifier
      type: string
      format: uuid
      example: 'f1a97f69-7fa0-4301-b498-128d78860828'
    Version:
      type: integer
      format: int32
      description: Version of the aggregate
      example: 0
      minimum: -2147483647
      maximum: 2147483647
    ReservationStatus:
      description: reservation status
      maxLength: 20
      minLength: 0
      type: string
      example: 'ON'

    RoomTypeInventoryDto:
      required:
        - id
        - hotelId
        - roomTypeId
        - roomTypeInventoryDate
        - totalInventory
        - totalReserved
      type: object
      properties:
        id:
          description: Identifier
          type: string
          format: uuid
          example: 'd1a97f69-7fa0-4301-b498-128d78860828'
        version:
          $ref: '#/components/schemas/Version'
        roomTypeId:
          $ref: '#/components/schemas/RoomTypeId'
        hotelId:
          $ref: '#/components/schemas/HotelId'
        roomTypeInventoryDate:
          description: inventory date in format yyyy-MM-dd
          type: string
          format: date
          example: 2024-01-11
        totalInventory:
          description: totalInventory
          type: integer
          format: int32
          minimum: 0
          example: 100
        totalReserved:
          description: totalReserved
          type: integer
          format: int32
          minimum: 0
          example: 3
    RoomTypeInventoryPaginationResponse:
      type: object
      additionalProperties: false
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          description: items
          items:
            $ref: '#/components/schemas/RoomTypeInventoryDto'
    RoomTypeInventoryListResponse:
      type: object
      properties:
        data:
          type: array
          description: items
          items:
            $ref: '#/components/schemas/RoomTypeInventoryDto'

    CriteriaRequestDto:
      required:
        - filters
      type: object
      properties:
        filters:
          type: string
          description: spring filter
          example: id:'d1a97f69-7fa0-4301-b498-128d78860828'
        limit:
          $ref: '#/components/schemas/Limit'
        page:
          $ref: '#/components/schemas/Page'
        sortDirection:
          description: ASC/DESC
          type: string
          example: ASC
          default: ASC
        sortBy:
          description: sort by field
          type: string
          example: id
          default: id
    Pagination:
      type: object
      description: pagination properties
      additionalProperties: false
      properties:
        limit:
          $ref: '#/components/schemas/Limit'
        page:
          $ref: '#/components/schemas/Page'
        total:
          $ref: '#/components/schemas/TotalItems'
    AuditFiltersRequestDto:
      type: object
      properties:
        id:
          type: string
          description: entity id
          format: uuid
          example: 'd1a97f69-7fa0-4301-b498-128d78860828'
        from:
          type: string
          format: date-time
          description: date in format dd/MM/yyyy HH:mm:ss
          example: 2024-01-01T00:00:00Z
        to:
          type: string
          format: date-time
          description: date in format dd/MM/yyyy HH:mm:ss
          example: 2050-12-31T23:59:59Z
    Limit:
      description: Model of limit of records of pagination
      type: integer
      format: int32
      default: 20
      minimum: 1
      maximum: 500
      example: 20
    Page:
      description: Model of page of pagination
      type: integer
      format: int32
      default: 0
      minimum: 0
      maximum: 2147483647
      example: 0
    TotalItems:
      description: Total search items
      type: integer
      format: int64
      minimum: 0
      maximum: 9223372036854776000
      example: 100
    ErrorObjectDto:
      title: ErrorObjectDto
      type: object
      additionalProperties: false
      description: Error details
      properties:
        type:
          type: string
          description: Error type
          example: 'about:blank'
          maxLength: 255
        status:
          type: integer
          format: int32
          description: Error status
          maximum: 999
          minimum: 100
          example: 400
        title:
          type: string
          description: Error title
          example: Bad Request
          maxLength: 1000
        detail:
          type: string
          description: Error detail
          example: 'Invalid Request. Please, check the data in the request (QueryString Parameters and/or Body).'
          maxLength: 5000
        instance:
          type: string
          description: Error instance
          example: /v1/hotel-reservation
          maxLength: 2000
  responses:
    400BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorObjectDto'
          examples:
            example-1:
              value:
                type: 'about:blank'
                status: 400
                title: Bad Request
                detail: 'Invalid Request. Please, check the data in the request (QueryString Parameters and/or Body).'
                instance: /v1/hotel-reservation
    404NotFound:
      description: NotFound
    409Conflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorObjectDto'
          examples:
            example-1:
              value:
                type: 'about:blank'
                status: 409
                title: Conflict
                detail: Conflict with another resource
                instance: /v1/hotel-reservation
