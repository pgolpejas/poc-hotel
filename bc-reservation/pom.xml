<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com</groupId>
        <artifactId>poc-hotel</artifactId>
        <version>0.0.1</version>
    </parent>

    <artifactId>bc-reservation</artifactId>
    <version>0.0.1</version>
    <name>${project.artifactId}</name>
    <description>This API exposes endpoints to hotel reservation</description>

    <properties>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
    </properties>

    <dependencies>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hotel-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

        <!--openapi-->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>

        <!-- Map struct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- observability-->
        <dependency>
            <groupId>io.opentelemetry.javaagent</groupId>
            <artifactId>opentelemetry-javaagent</artifactId>
            <version>${otel.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.loki4j</groupId>
            <artifactId>loki-logback-appender</artifactId>
            <version>${loki-logback-appender.version}</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- db  -->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>com.turkraft.springfilter</groupId>
            <artifactId>jpa</artifactId>
            <version>${turkraft.springfilter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>${hibernate-jpamodelgen.version}</version>
        </dependency>
        <dependency>
            <groupId>org.javers</groupId>
            <artifactId>javers-spring-boot-starter-sql</artifactId>
            <version>${javers.version}</version>
        </dependency>

        <!-- spring cloud / kafka -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-schema-registry-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-avro-serializer</artifactId>
            <version>${kafka-avro-serializer.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-test-binder</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry-maven-plugin</artifactId>
                <version>${confluent.version}</version>
                <configuration>
                    <schemaRegistryUrls>
                        <param>http://127.0.0.1:8081</param>
                    </schemaRegistryUrls>
                    <subjects>
                        <poc.reservation.domain.v1-value>${project.basedir}/src/main/resources/asyncapi/v1/envelope/poc.reservation.domain.v1.avsc</poc.reservation.domain.v1-value>
                        <com.reservation.domain.avro.v1.ReservationCreated>${project.basedir}/src/main/resources/asyncapi/v1/imports/reservation_created.avsc</com.reservation.domain.avro.v1.ReservationCreated>
                        <com.reservation.domain.avro.v1.ReservationUpdated>${project.basedir}/src/main/resources/asyncapi/v1/imports/reservation_updated.avsc</com.reservation.domain.avro.v1.ReservationUpdated>
                        <com.reservation.domain.avro.v1.ReservationDeleted>${project.basedir}/src/main/resources/asyncapi/v1/imports/reservation_deleted.avsc</com.reservation.domain.avro.v1.ReservationDeleted>
                    </subjects>
                    <schemaTypes>
                        <poc.reservation.domain.v1-value>AVRO</poc.reservation.domain.v1-value>
                        <com.reservation.domain.avro.v1.ReservationCreated>AVRO</com.reservation.domain.avro.v1.ReservationCreated>
                        <com.reservation.domain.avro.v1.ReservationUpdated>AVRO</com.reservation.domain.avro.v1.ReservationUpdated>
                        <com.reservation.domain.avro.v1.ReservationDeleted>AVRO</com.reservation.domain.avro.v1.ReservationDeleted>
                    </schemaTypes>
                    <references>
                        <poc.reservation.domain.v1-value>
                            <reference>
                                <name>com.reservation.domain.avro.v1.ReservationCreated</name>
                                <subject>com.reservation.domain.avro.v1.ReservationCreated</subject>
                            </reference>
                            <reference>
                                <name>com.reservation.domain.avro.v1.ReservationUpdated</name>
                                <subject>com.reservation.domain.avro.v1.ReservationUpdated</subject>
                            </reference>
                            <reference>
                                <name>com.reservation.domain.avro.v1.ReservationDeleted</name>
                                <subject>com.reservation.domain.avro.v1.ReservationDeleted</subject>
                            </reference>
                        </poc.reservation.domain.v1-value>
                    </references>
                </configuration>
                <goals>
                    <goal>register</goal>
                </goals>
            </plugin>            
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>sonar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>${liquibase.version}</version>
                <configuration>
                    <driver>org.postgresql.Driver</driver>
                    <url>jdbc:postgresql://localhost:5533/reservation-db</url>
                    <username>admin</username>
                    <password>admin</password>
                    <outputChangeLogFile>src/main/resources/liquibase-outputChangeLog.xml</outputChangeLogFile>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
