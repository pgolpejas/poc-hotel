<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com</groupId>
        <artifactId>poc-hotel</artifactId>
        <version>0.0.1</version>
    </parent>

    <artifactId>bc-reservation</artifactId>
    <version>0.0.1</version>
    <name>${project.artifactId}</name>
    <description>This API exposes endpoints to hotel reservation</description>

    <properties>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>

        <openapi-generator.version>7.8.0</openapi-generator.version>
        <openapi.package.api>com.reservation.openapi.api</openapi.package.api>
        <openapi.package.model>com.reservation.openapi.model</openapi.package.model>

        <swagger.annotations.version>2.2.23</swagger.annotations.version>
        <jackson-nullable.version>0.2.6</jackson-nullable.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hotel-core</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>outbox-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

        <!--openapi-->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.2.22</version>
        </dependency>

        <!-- Map struct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- observability-->
        <dependency>
            <groupId>io.opentelemetry.javaagent</groupId>
            <artifactId>opentelemetry-javaagent</artifactId>
            <version>${otel.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.loki4j</groupId>
            <artifactId>loki-logback-appender</artifactId>
            <version>${loki-logback-appender.version}</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- db  -->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>

        <!-- spring cloud / kafka -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-schema-registry-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-test-binder</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- openapi generator -->
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson-nullable.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger.annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi-generator.version}</version>
                <executions>
                    <execution>
                        <id>generate-api-code</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/src/main/resources/rest/v1/bc-reservation-openapi.yml
                            </inputSpec>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generatorName>spring</generatorName>
                            <strictSpec>true</strictSpec>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <configOptions>
                                <useJakartaEe>true</useJakartaEe>
                                <controllerThrowsExceptions>
                                    java.io.IOException,com.hotel.core.domain.exception.NotFoundException
                                </controllerThrowsExceptions>
                                <interfaceOnly>true</interfaceOnly>
                                <skipDefaultInterface>true</skipDefaultInterface>
                                <useBeanValidation>true</useBeanValidation>
                                <useClassLevelBeanValidation>false</useClassLevelBeanValidation>
                                <useTags>true</useTags>
                                <java8>true</java8>
                                <useOptional>false</useOptional>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <dateLibrary>java8</dateLibrary>
                                <bigDecimalAsString>true</bigDecimalAsString>
                                <useBeanValidation>true</useBeanValidation>
                                <apiPackage>com.reservation.openapi.api</apiPackage>
                                <modelPackage>com.reservation.openapi.model</modelPackage>
                                <configOptions>
                                    <additionalModelTypeAnnotations>@lombok.Data @lombok.NoArgsConstructor @lombok.AllArgsConstructor</additionalModelTypeAnnotations>
                                </configOptions>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>OffsetDateTime=LocalDateTime</typeMapping>
                            </typeMappings>
                            <importMappings>
                                <importMapping>java.time.OffsetDateTime=java.time.LocalDateTime</importMapping>
                            </importMappings>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry-maven-plugin</artifactId>
                <version>${confluent.version}</version>
                <configuration>
                    <schemaRegistryUrls>
                        <param>http://127.0.0.1:8081</param>
                    </schemaRegistryUrls>
                    <subjects>
                        <poc.reservation.domain.v1-value>
                            ${project.basedir}/src/main/resources/asyncapi/v1/envelope/poc.reservation.domain.v1.avsc
                        </poc.reservation.domain.v1-value>
                        <com.reservation.domain.avro.v1.ReservationCreated>
                            ${project.basedir}/src/main/resources/asyncapi/v1/imports/reservation_created.avsc
                        </com.reservation.domain.avro.v1.ReservationCreated>
                        <com.reservation.domain.avro.v1.ReservationUpdated>
                            ${project.basedir}/src/main/resources/asyncapi/v1/imports/reservation_updated.avsc
                        </com.reservation.domain.avro.v1.ReservationUpdated>
                        <com.reservation.domain.avro.v1.ReservationDeleted>
                            ${project.basedir}/src/main/resources/asyncapi/v1/imports/reservation_deleted.avsc
                        </com.reservation.domain.avro.v1.ReservationDeleted>
                    </subjects>
                    <schemaTypes>
                        <poc.reservation.domain.v1-value>AVRO</poc.reservation.domain.v1-value>
                        <com.reservation.domain.avro.v1.ReservationCreated>AVRO
                        </com.reservation.domain.avro.v1.ReservationCreated>
                        <com.reservation.domain.avro.v1.ReservationUpdated>AVRO
                        </com.reservation.domain.avro.v1.ReservationUpdated>
                        <com.reservation.domain.avro.v1.ReservationDeleted>AVRO
                        </com.reservation.domain.avro.v1.ReservationDeleted>
                    </schemaTypes>
                    <references>
                        <poc.reservation.domain.v1-value>
                            <reference>
                                <name>com.reservation.domain.avro.v1.ReservationCreated</name>
                                <subject>com.reservation.domain.avro.v1.ReservationCreated</subject>
                            </reference>
                            <reference>
                                <name>com.reservation.domain.avro.v1.ReservationUpdated</name>
                                <subject>com.reservation.domain.avro.v1.ReservationUpdated</subject>
                            </reference>
                            <reference>
                                <name>com.reservation.domain.avro.v1.ReservationDeleted</name>
                                <subject>com.reservation.domain.avro.v1.ReservationDeleted</subject>
                            </reference>
                        </poc.reservation.domain.v1-value>
                    </references>
                </configuration>
                <goals>
                    <goal>register</goal>
                </goals>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>sonar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
