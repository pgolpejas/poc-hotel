version: "3.9"

services:
  hotel-db:
    image: postgres:16.2
    hostname: hotel-db
    container_name: hotel-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: hotel-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - 5532:5432
    networks:
      - local-des
      
  reservation-db:
    image: postgres:16.2
    hostname: reservation-db
    container_name: reservation-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: reservation-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - 5533:5432
    networks:
      - local-des        

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - local-des
  
  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.0
    hostname: schema-registry
    depends_on:
      - kafka-broker-1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      SCHEMA_REGISTRY_DEBUG: 'true'
    networks:
      - local-des
  
  kafka-broker-1:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka-broker-1
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    command: sh -c "((echo Waiting for Kafka to be ready... && sleep 15 && echo Creating topic... && kafka-topics --create --bootstrap-server kafka-broker-1:19092 --topic hotel_availability_searches --replication-factor 1 --partitions 1)&) && /etc/confluent/docker/run "
    networks:
      - local-des
  
  akhq-local:
    image: tchiotludo/akhq
    hostname: akhq-local
    container_name: akhq-local
    environment:
      JVM_OPTS_FILE: /app/jvm.options
    ports:
      - "9000:8080"
    volumes:
      - "./akhq/application.yml:/app/application.yml"
    networks:
      - local-des        
      
  loki-local:
    image: grafana/loki:2.9.6
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - local-des
  
  prometheus-local:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    #   Add 127.0.0.0	host-gateway to /etc/hosts in ubuntu systems
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
    networks:
      - local-des
  
  tempo-local:
    image: grafana/tempo:latest
    container_name: tempo
    command: -config.file /etc/tempo-config.yml
    ports:
      - "3110:3100"
      - "4317:4317"
    volumes:
      - ./observability/tempo/tempo.yml:/etc/tempo-config.yml
    networks:
      - local-des
  
  grafana-local:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./observability/grafana/provisioning:/etc/grafana/provisioning
      - ./observability/grafana/grafana.ini:/etc/grafana/grafana.ini
    env_file:
      - ./observability/grafana/grafana.env
    networks:
      - local-des
  
networks:
  local-des:
    name: local_des_network      
