version: "3.9"

services:
  poc-db:
    image: postgres:16.2
    hostname: poc-db-postgresql
    container_name: poc-db-postgresql
    restart: unless-stopped
    environment:
      POSTGRES_DB: poc-db-postgresql
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - 5532:5432
    networks:
      - local-des

  zoo1:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - local-des

  kafka1:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    command: sh -c "((echo Waiting for Kafka to be ready... && sleep 15 && echo Creating topic... && kafka-topics --create --bootstrap-server kafka1:19092 --topic hotel_availability_searches --replication-factor 1 --partitions 1)&) && /etc/confluent/docker/run "
    depends_on:
      - zoo1
    networks:
      - local-des

  redpanda-local:
    image: 'docker.redpanda.com/redpandadata/console:latest'
    hostname: kafka-redpanda-local
    container_name: kafka-redpanda-local
    ports:
      - '8100:8080'
    depends_on:
      - zoo1
      - kafka1
    environment:
      KAFKA_BROKERS: kafka1:19092
    networks:
      - local-des
      
  loki-local:
    image: grafana/loki:2.9.6
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - local-des
  
  prometheus-local:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    #   Add 127.0.0.0	host-gateway to /etc/hosts in ubuntu systems
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
    networks:
      - local-des
  
  tempo-local:
    image: grafana/tempo
    container_name: tempo
    command: -config.file /etc/tempo-config.yml
    ports:
      - "3110:3100"
      - "4317:4317"
    volumes:
      - ./observability/tempo/tempo.yml:/etc/tempo-config.yml
    networks:
      - local-des
  
  grafana-local:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./observability/grafana/provisioning:/etc/grafana/provisioning
      - ./observability/grafana/grafana.ini:/etc/grafana/grafana.ini
    env_file:
      - ./observability/grafana/grafana.env
    networks:
      - local-des
  
networks:
  local-des:
    name: local_des_network      
